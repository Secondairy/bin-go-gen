import{generateBoard}from"./board.js";async function loadConfigAndInit(){try{const e=await fetch("/config.json");if(!e.ok)throw new Error(`Config fetch failed: ${e.status}`);const t=await e.json();generateBoard(t)}catch(e){}}function watchForHover(){let e=0;function t(){new Date-e<500||document.body.classList.add("hasHover")}document.addEventListener("touchstart",(function(){e=new Date}),!0),document.addEventListener("touchstart",(function(){document.body.classList.remove("hasHover")}),!0),document.addEventListener("mousemove",t,!0),t()}async function captureAndShare(){const e=document.getElementById("share-btn"),t=e.innerHTML;e.innerHTML="<span>Capturing...</span>",e.style.pointerEvents="none",e.style.opacity="0.7",e.style.width="auto";const n=document.querySelector("footer"),o=n?n.style.visibility:"";try{n&&(n.style.visibility="hidden"),await new Promise((e=>setTimeout(e,200)));const a=await htmlToImage.toBlob(document.body,{quality:1,pixelRatio:2,backgroundColor:getComputedStyle(document.documentElement).getPropertyValue("--body-bg").trim()});n&&(n.style.visibility=o),e.innerHTML=t,e.style.pointerEvents="",e.style.opacity="",e.style.width="",handleImageBlob(a)}catch(n){const a=document.querySelector("footer");a&&(a.style.visibility=o||""),e.innerHTML=t,e.style.pointerEvents="",e.style.opacity="",e.style.width="",showShareFeedback("Error capturing screenshot","error")}}function handleImageBlob(e){if(navigator.clipboard&&window.ClipboardItem)try{const t=new ClipboardItem({"image/png":e});navigator.clipboard.write([t]).then((()=>{showShareFeedback("Image copied to clipboard")})).catch((t=>{downloadImageFromBlob(e)}))}catch(t){downloadImageFromBlob(e)}else downloadImageFromBlob(e)}function downloadImageFromBlob(e){const t=URL.createObjectURL(e),n=document.createElement("a");n.download=`bingo-board-${(new Date).toISOString().slice(0,10)}.png`,n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(t),showShareFeedback("Image downloaded")}function showShareFeedback(e,t="success"){const n=document.getElementById("share-btn");if(!n)return;const o=n.innerHTML,a=n.style.cssText;"success"===t?(n.innerHTML=`\n      <div style="display: flex; align-items: center; gap: 0.75rem;">\n        \n    <svg width="25" height="18" viewBox="0 0 25 18" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <g clip-path="url(#clip0_124_511)">\n        <path d="M1.29248 8.19841L9.03588 15.8969L23.6849 1.29004" stroke="currentColor" stroke-width="2" stroke-miterlimit="10"/>\n      </g>\n      <defs>\n        <clipPath id="clip0_124_511">\n          <rect width="24" height="17" fill="white" transform="translate(0.5 0.5)"/>\n        </clipPath>\n      </defs>\n    </svg>\n  \n        <span>${e}</span>\n      </div>\n    `,n.style.cssText=`\n      ${a}\n      background: var(--active-bg);\n      color: var(--active-color);\n      border-color: var(--active-color);\n      cursor: default;\n      pointer-events: none;\n      width: auto;\n    `):(n.innerHTML=`<span>${e}</span>`,n.style.cssText=`\n      ${a}\n      background: #dc3545;\n      color: white;\n      border-color: #dc3545;\n      cursor: default;\n      pointer-events: none;\n    `),setTimeout((()=>{n.innerHTML=o,n.style.cssText=a}),5e3)}const toggle=document.getElementById("theme-toggle"),buttons=toggle.querySelectorAll(".mode-btn");function syncActive(){const e=document.documentElement.dataset.theme||"dark";buttons.forEach((t=>{t.classList.toggle("active",t.dataset.mode===e)}))}buttons.forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.mode;t!==document.documentElement.dataset.theme&&(document.documentElement.dataset.theme=t,syncActive())}))})),syncActive(),watchForHover(),document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("share-btn");e&&e.addEventListener("click",captureAndShare)})),window.addEventListener("DOMContentLoaded",loadConfigAndInit);